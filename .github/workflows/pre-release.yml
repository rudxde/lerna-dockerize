# This workflow will run tests using node and then publish a package to GitHub Packages when a release is created
# For more information see: https://help.github.com/actions/language-and-framework-guides/publishing-nodejs-packages

name: Pre-Release

on:
  push:
    branches: [ master ]

concurrency:
  group: pre_release
  cancel-in-progress: true

jobs:
  update-version:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v1
        with:
          node-version: 18
          registry-url: https://registry.npmjs.org/
      - run: npm ci
      - run: npm run version -- --no-git-tag-version --no-push --no-changelog --conventional-prerelease --force-publish --preid build.$(git rev-parse --short HEAD)
      - name: cleanup node_modules
        run: rm -rf node_modules
      - uses: actions/upload-artifact@v1
        with:
          name: update-version
          path: ./

  lint:
    needs: update-version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-node@v1
        with:
          node-version: 18
      - uses: actions/download-artifact@v1
        with:
          name: update-version
          path: ./
      - run: npm ci
      - run: npm run bootstrap
      - run: npm run lint

  test:
    needs: update-version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-node@v1
        with:
          node-version: 18
      - uses: actions/download-artifact@v1
        with:
          name: update-version
          path: ./
      - run: npm ci
      - run: npm run bootstrap
      - run: npm run test

  build:
    needs: update-version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-node@v1
        with:
          node-version: 18
      - uses: actions/download-artifact@v1
        with:
          name: update-version
          path: ./
      - run: npm ci
      - run: npm run bootstrap
      - run: npm run build:prod
      - run: cp README.md packages/lerna-dockerize/README.md
      - name: cleanup node_modules
        run: |
          npm run clean
          rm -rf node_modules
      - uses: actions/upload-artifact@v1
        with:
          name: build
          path: ./

  publish-npm:
    needs:
      - lint
      - test
      - build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-node@v1
        with:
          node-version: 18
          registry-url: https://registry.npmjs.org/
      - uses: actions/download-artifact@v1
        with:
          name: build
          path: ./
      - run: npm ci
      - run: npm run publish:npm -- --tag build
        env:
          NODE_AUTH_TOKEN: ${{secrets.npm_token}}
